//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.1 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.graphdrawing.graphml._1_0;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 *       Complex type for the <graphml> element.
 *     
 * 
 * <p>Java class for graphml.type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="graphml.type">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://graphml.graphdrawing.org/xmlns}desc" minOccurs="0"/>
 *         <element ref="{http://graphml.graphdrawing.org/xmlns}key" maxOccurs="unbounded" minOccurs="0"/>
 *         <sequence>
 *           <choice maxOccurs="unbounded" minOccurs="0">
 *             <element ref="{http://graphml.graphdrawing.org/xmlns}graph"/>
 *             <element ref="{http://graphml.graphdrawing.org/xmlns}data"/>
 *           </choice>
 *         </sequence>
 *       </sequence>
 *       <attGroup ref="{http://graphml.graphdrawing.org/xmlns}graphml.extra.attrib"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "graphml.type", propOrder = {
    "desc",
    "key",
    "graphOrData"
})
public class GraphmlType {

    protected String desc;
    protected List<KeyType> key;
    @XmlElements({
        @XmlElement(name = "graph", type = GraphType.class),
        @XmlElement(name = "data", type = DataType.class)
    })
    protected List<Object> graphOrData;

    /**
     * Gets the value of the desc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesc() {
        return desc;
    }

    /**
     * Sets the value of the desc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesc(String value) {
        this.desc = value;
    }

    /**
     * Gets the value of the key property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the key property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getKey().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KeyType }
     * 
     * 
     * @return
     *     The value of the key property.
     */
    public List<KeyType> getKey() {
        if (key == null) {
            key = new ArrayList<>();
        }
        return this.key;
    }

    /**
     * Gets the value of the graphOrData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the graphOrData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGraphOrData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataType }
     * {@link GraphType }
     * 
     * 
     * @return
     *     The value of the graphOrData property.
     */
    public List<Object> getGraphOrData() {
        if (graphOrData == null) {
            graphOrData = new ArrayList<>();
        }
        return this.graphOrData;
    }

}
