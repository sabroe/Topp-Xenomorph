plugins {
    id 'java-library-distribution'
    id 'jacoco'
//    id 'maven-publish'
//    id 'signing'

    id 'com.yelstream.topp.xenomorph' version '0.2.0'
}

javadoc {
    exclude 'org/iso/std/iso/_20022/**'
    exclude 'net/gexf/**'
    exclude 'org/graphdrawing/**'
//    options.addBooleanOption('Xdoclint:none',true)
}

sourceSets {
    checkstyle {
        java {
            exclude 'org/iso/std/iso/_20022/**'
            exclude 'net/gexf/**'
            exclude 'org/graphdrawing/**'
        }
    }
}

sourceSets{
    itest {
        java {
            srcDirs("src/itest")
        }
    }
}

xenomorph {
    sourceSets {
        main {
/*
            xjc {
//        resourceDir = project.file('src/main/resources')
                run {
                    name = 'Test generation of ISO 20022 XML Schema'
                    enable = true
                    sourceSchema += schema.of(resource.file('xsd/pain.001.001.02.xsd'))
                    options {
                        bindingFile += resource.file('xjb/mapping.xjb')
                    }
                    extensions {
                    }
                }
                run {
                    name = 'Test generation of GraphML XML Schema'
                    enable = true
                    sourceSchema += schema.of(resource.file('xsd/GraphML/graphml-parseinfo.xsd'))
                    sourceSchema += schema.of(resource.file('xsd/GraphML/graphml-attributes.xsd'))
                    options {
                        catalogFile = resource.file('cat/catalog.cat')
                        targetPackage = 'org.graphdrawing.graphml._1_0'
                    }
                    extensions {
                    }
                }
            }
*/
        }
    }
}

xenomorph {
    xjc {
        resource.defaultResourceDir = project.file('src/main/resources')
        run {
            name = 'Test generation of ISO 20022 XML Schema'
            enable = true
            sourceSchema += schema.of(resource.file('xsd/pain.001.001.02.xsd'))
            options {
                bindingFile += resource.file('xjb/mapping.xjb')
            }
            extensions {
            }
        }
        run {
            name = 'Test generation of GraphML XML Schema'
            enable = true
            sourceSchema += schema.of(resource.file('xsd/GraphML/graphml-parseinfo.xsd'))
            sourceSchema += schema.of(resource.file('xsd/GraphML/graphml-attributes.xsd'))
            options {
                catalogFile = resource.file('cat/catalog.cat')
                targetPackage = 'org.graphdrawing.graphml._1_0'
            }
            extensions {
            }
        }
        run {
            name = 'Test generation of GEXF XML Schema'
            enable = true
            sourceSchema += schema.of(resource.file('xsd/Graph-Exchange-XML/1.2/XSD/gexf.xsd'))
            options {
                bindingFile += resource.file('xjb/Graph-Exchange-XML/1.2/mapping.xjb')
            }
            extensions {
            }
        }
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'org.slf4j:slf4j-api:2.0.6'

    //See https://eclipse-ee4j.github.io/jaxb-ri/ !
    api 'jakarta.annotation:jakarta.annotation-api:2.1.1'  //Necessary for e.g. @Generated as 'jakarta.annotation.Generated'!
    api 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
}
